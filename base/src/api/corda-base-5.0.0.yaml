net.corda.v5.base.annotations.CordaSerializable:
  annotations: &id001 []
  type: public @interface
  interface: false
  methods: {}
net.corda.v5.base.annotations.DoNotImplement:
  annotations: *id001
  type: public @interface
  interface: false
  methods: {}
net.corda.v5.base.annotations.SerializableCalculatedProperty:
  annotations: *id001
  type: public @interface
  interface: false
  methods: {}
net.corda.v5.base.annotations.Suspendable:
  annotations: *id001
  type: public @interface
  interface: false
  methods: {}
net.corda.v5.base.annotations.VisibleForTesting:
  annotations: *id001
  type: public @interface
  interface: false
  methods: {}
net.corda.v5.base.concurrent.ConcurrencyUtils:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    getOrThrow:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: V
      params: {}
net.corda.v5.base.exceptions.CordaRuntimeException:
  annotations: [CordaSerializable]
  type: public class
  extends: java.lang.RuntimeException
  implements: [net.corda.v5.base.exceptions.CordaThrowable]
  interface: false
  methods:
    addSuppressed:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: void
      params:
        suppressed:
          annotation: [NotNull]
          type: Throwable[]
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    getCause:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public
      returnType: Throwable
    getMessage:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public
      returnType: String
    getOriginalExceptionClassName:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public
      returnType: String
    getOriginalMessage:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public
      returnType: String
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    setCause:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: void
      params:
        cause:
          annotation: [Nullable]
          type: Throwable
    setMessage:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: void
      params:
        message:
          annotation: [Nullable]
          type: String
    setOriginalExceptionClassName:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: [Nullable]
          type: String
  fields:
    originalExceptionClassName:
      annotation: [Nullable]
      type: private String
    _message:
      annotation: *id001
      type: private String
    _cause:
      annotation: *id001
      type: private Throwable
net.corda.v5.base.exceptions.CordaThrowable:
  annotations: [CordaSerializable]
  type: public interface
  extends: *id001
  interface: true
  methods:
    addSuppressed:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        suppressed:
          annotation: [NotNull]
          type: Throwable[]
    getOriginalExceptionClassName:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public abstract
      returnType: String
    getOriginalMessage:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public abstract
      returnType: String
    setCause:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        cause:
          annotation: [Nullable]
          type: Throwable
    setMessage:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        message:
          annotation: [Nullable]
          type: String
    setOriginalExceptionClassName:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        <set-?>:
          annotation: [Nullable]
          type: String
net.corda.v5.base.internal.ReflectionHelpersKt:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    uncheckedCast:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: U
      params:
        obj:
          annotation: *id001
          type: T
net.corda.v5.base.stream.Cursor:
  annotations: [DoNotImplement]
  type: public interface
  extends: *id001
  interface: true
  methods:
    asyncPoll:
      annotations: [NotNull]
      constructor: false
      default: true
      type: public
      returnType: java.util.concurrent.CompletableFuture<net.corda.v5.base.stream.Cursor.PollResult<T>>
      params:
        maxCount:
          annotation: *id001
          type: int
        awaitForResultTimeout:
          annotation: [NotNull]
          type: java.time.Duration
    poll:
      annotations: [Suspendable, NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.Cursor.PollResult<T>
      params:
        maxCount:
          annotation: *id001
          type: int
        awaitForResultTimeout:
          annotation: [NotNull]
          type: java.time.Duration
net.corda.v5.base.stream.Cursor$PollResult:
  annotations: [CordaSerializable, DoNotImplement]
  type: public static interface
  extends: *id001
  interface: true
  methods:
    getFirstPosition:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: long
    getLastPosition:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: long
    getPositionedValues:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.base.stream.Cursor.PollResult.PositionedValue<T>>
    getRemainingElementsCountEstimate:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public abstract
      returnType: Long
    getValues:
      annotations: [NotNull]
      constructor: false
      default: true
      type: public
      returnType: java.util.List<T>
    isEmpty:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: boolean
    isLastResult:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: boolean
net.corda.v5.base.stream.Cursor$PollResult$PositionedValue:
  annotations: [CordaSerializable, DoNotImplement]
  type: public static interface
  extends: *id001
  interface: true
  methods:
    getPosition:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: long
    getValue:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: T
net.corda.v5.base.stream.CursorException:
  annotations: [CordaSerializable]
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaThrowable
  implements: *id001
  interface: false
  methods:
    addSuppressed:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        suppressed:
          annotation: [NotNull]
          type: Throwable[]
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    getCause:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public
      returnType: Throwable
    getMessage:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public
      returnType: String
    getOriginalExceptionClassName:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public abstract
      returnType: String
    getOriginalMessage:
      annotations: [Nullable]
      constructor: false
      default: false
      type: public abstract
      returnType: String
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    setCause:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        cause:
          annotation: [Nullable]
          type: Throwable
    setMessage:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        message:
          annotation: [Nullable]
          type: String
    setOriginalExceptionClassName:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        <set-?>:
          annotation: [Nullable]
          type: String
  fields:
    originalExceptionClassName:
      annotation: [Nullable]
      type: private String
    _message:
      annotation: *id001
      type: private String
    _cause:
      annotation: *id001
      type: private Throwable
net.corda.v5.base.stream.DurableCursor:
  annotations: [DoNotImplement]
  type: public interface
  extends: [net.corda.v5.base.stream.Cursor]
  interface: true
  methods:
    asyncCommit:
      annotations: [NotNull]
      constructor: false
      default: true
      type: public
      returnType: java.util.concurrent.CompletableFuture<kotlin.Unit>
      params:
        position:
          annotation: *id001
          type: long
    asyncPoll:
      annotations: [NotNull]
      constructor: false
      default: true
      type: public
      returnType: java.util.concurrent.CompletableFuture<net.corda.v5.base.stream.Cursor.PollResult<T>>
      params:
        maxCount:
          annotation: *id001
          type: int
        awaitForResultTimeout:
          annotation: [NotNull]
          type: java.time.Duration
    commit:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: void
      params:
        result:
          annotation: [NotNull]
          type: net.corda.v5.base.stream.Cursor.PollResult<T>
    getCurrentPosition:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: long
    getPositionManager:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.PositionManager
    poll:
      annotations: [Suspendable, NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.Cursor.PollResult<T>
      params:
        maxCount:
          annotation: *id001
          type: int
        awaitForResultTimeout:
          annotation: [NotNull]
          type: java.time.Duration
    reset:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: void
    seek:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: void
      params:
        position:
          annotation: *id001
          type: long
net.corda.v5.base.stream.DurableCursorBuilder:
  annotations: [DoNotImplement]
  type: public interface
  extends: *id001
  interface: true
  methods:
    build:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.DurableCursor<T>
    getPositionManager:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.PositionManager
    setPositionManager:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        <set-?>:
          annotation: [NotNull]
          type: net.corda.v5.base.stream.PositionManager
net.corda.v5.base.stream.FiniteDurableCursor:
  annotations: [DoNotImplement]
  type: public interface
  extends: [net.corda.v5.base.stream.DurableCursor]
  interface: true
  methods:
    asyncCommit:
      annotations: [NotNull]
      constructor: false
      default: true
      type: public
      returnType: java.util.concurrent.CompletableFuture<kotlin.Unit>
      params:
        position:
          annotation: *id001
          type: long
    asyncPoll:
      annotations: [NotNull]
      constructor: false
      default: true
      type: public
      returnType: java.util.concurrent.CompletableFuture<net.corda.v5.base.stream.Cursor.PollResult<T>>
      params:
        maxCount:
          annotation: *id001
          type: int
        awaitForResultTimeout:
          annotation: [NotNull]
          type: java.time.Duration
    commit:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: void
      params:
        result:
          annotation: [NotNull]
          type: net.corda.v5.base.stream.Cursor.PollResult<T>
    getCurrentPosition:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: long
    getPositionManager:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.PositionManager
    poll:
      annotations: [Suspendable, NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.Cursor.PollResult<T>
      params:
        maxCount:
          annotation: *id001
          type: int
        awaitForResultTimeout:
          annotation: [NotNull]
          type: java.time.Duration
    reset:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: void
    seek:
      annotations: *id001
      constructor: false
      default: true
      type: public
      returnType: void
      params:
        position:
          annotation: *id001
          type: long
    take:
      annotations: [NotNull]
      constructor: false
      default: true
      type: public
      returnType: net.corda.v5.base.stream.Cursor.PollResult<T>
      params:
        maxCount:
          annotation: *id001
          type: int
net.corda.v5.base.stream.FiniteDurableCursorBuilder:
  annotations: [DoNotImplement]
  type: public interface
  extends: [net.corda.v5.base.stream.DurableCursorBuilder]
  interface: true
  methods:
    build:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.DurableCursor<T>
    getPositionManager:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: net.corda.v5.base.stream.PositionManager
    setPositionManager:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        <set-?>:
          annotation: [NotNull]
          type: net.corda.v5.base.stream.PositionManager
net.corda.v5.base.stream.MethodKt:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    isFiniteDurableStreamsMethod:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: boolean
      params: {}
    returnsDurableCursorBuilder:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: boolean
      params: {}
net.corda.v5.base.stream.PositionManager:
  annotations: *id001
  type: public interface
  extends: [java.util.function.Consumer, java.util.function.Supplier]
  interface: true
  methods: {}
net.corda.v5.base.stream.PositionManager$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods: {}
  fields:
    MIN_POSITION:
      annotation: *id001
      type: public static final long
      initialised value: '-1'
net.corda.v5.base.types.ByteArrays:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    parseAsHex:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: byte[]
      params: {}
    sequence:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        offset:
          annotation: *id001
          type: int
        size:
          annotation: *id001
          type: int
    toHexString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
  fields:
    hexCode:
      annotation: *id001
      type: private static final char[]
net.corda.v5.base.types.ByteSequence:
  annotations: *id001
  type: public abstract class
  extends: null
  implements: [java.lang.Comparable]
  interface: false
  methods:
    compareTo:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
      params:
        other:
          annotation: [NotNull]
          type: net.corda.v5.base.types.ByteSequence
    copy:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
    copyBytes:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: byte[]
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    getBytes:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public abstract
      returnType: byte[]
    getOffset:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    getSize:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    of:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        bytes:
          annotation: [NotNull]
          type: byte[]
    open:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.io.ByteArrayInputStream
    putTo:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.nio.ByteBuffer
      params:
        buffer:
          annotation: [NotNull]
          type: java.nio.ByteBuffer
    slice:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.nio.ByteBuffer
    subSequence:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        offset:
          annotation: *id001
          type: int
        size:
          annotation: *id001
          type: int
    take:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        n:
          annotation: *id001
          type: int
    toString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: String
    writeTo:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: void
      params:
        output:
          annotation: [NotNull]
          type: java.io.OutputStream
  fields:
    _bytes:
      annotation: *id001
      type: private final byte[]
    offset:
      annotation: *id001
      type: private final int
    size:
      annotation: *id001
      type: private final int
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.types.ByteSequence.Companion
net.corda.v5.base.types.ByteSequence$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    of:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        bytes:
          annotation: [NotNull]
          type: byte[]
net.corda.v5.base.types.NonEmptySet:
  annotations: *id001
  type: public final class
  extends: null
  implements: [java.util.Set, kotlin.jvm.internal.markers.KMappedMarker]
  interface: false
  methods:
    add:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: *id001
          type: T
    addAll:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: *id001
          type: java.util.Collection<? extends T>
    clear:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: void
    contains:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        element:
          annotation: *id001
          type: Object
    containsAll:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        elements:
          annotation: [NotNull]
          type: java.util.Collection<?>
    copyOf:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.types.NonEmptySet<T>
      params:
        elements:
          annotation: [NotNull]
          type: java.util.Collection<? extends T>
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    forEach:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: void
      params:
        action:
          annotation: [NotNull]
          type: java.util.function.Consumer<? super T>
    getSize:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    head:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: T
    isEmpty:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
    iterator:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: java.util.Iterator<T>
    of:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.types.NonEmptySet<T>
      params:
        first:
          annotation: *id001
          type: T
        second:
          annotation: *id001
          type: T
        rest:
          annotation: [NotNull]
          type: T[]
    parallelStream:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: java.util.stream.Stream<T>
    remove:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: *id001
          type: Object
    removeAll:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: *id001
          type: java.util.Collection<?>
    retainAll:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: *id001
          type: java.util.Collection<?>
    spliterator:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: java.util.Spliterator<T>
    stream:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: java.util.stream.Stream<T>
    toArray:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: T[]
      params:
        null:
          annotation: *id001
          type: T[]
    toString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: String
  fields:
    elements:
      annotation: *id001
      type: private final java.util.Set<T>
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.types.NonEmptySet.Companion
net.corda.v5.base.types.NonEmptySet$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    copyOf:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.NonEmptySet<T>
      params:
        elements:
          annotation: [NotNull]
          type: java.util.Collection<? extends T>
    of:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.NonEmptySet<T>
      params:
        first:
          annotation: *id001
          type: T
        second:
          annotation: *id001
          type: T
        rest:
          annotation: [NotNull]
          type: T[]
net.corda.v5.base.types.OpaqueBytes:
  annotations: [CordaSerializable]
  type: public class
  extends: java.lang.Comparable<net.corda.v5.base.types.ByteSequence>
  implements: *id001
  interface: false
  methods:
    compareTo:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
      params:
        other:
          annotation: [NotNull]
          type: net.corda.v5.base.types.ByteSequence
    copy:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
    copyBytes:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: byte[]
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    getBytes:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: byte[]
    getOffset:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    getSize:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    of:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        bytes:
          annotation: [NotNull]
          type: byte[]
    open:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.io.ByteArrayInputStream
    putTo:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.nio.ByteBuffer
      params:
        buffer:
          annotation: [NotNull]
          type: java.nio.ByteBuffer
    slice:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.nio.ByteBuffer
    subSequence:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        offset:
          annotation: *id001
          type: int
        size:
          annotation: *id001
          type: int
    take:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        n:
          annotation: *id001
          type: int
    toString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: String
    writeTo:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: void
      params:
        output:
          annotation: [NotNull]
          type: java.io.OutputStream
  fields:
    bytes:
      annotation: [NotNull]
      type: private final byte[]
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.types.OpaqueBytes.Companion
    _bytes:
      annotation: *id001
      type: private final byte[]
    offset:
      annotation: *id001
      type: private final int
    size:
      annotation: *id001
      type: private final int
net.corda.v5.base.types.OpaqueBytes$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    of:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.OpaqueBytes
      params:
        b:
          annotation: [NotNull]
          type: byte[]
net.corda.v5.base.types.OpaqueBytesSubSequence:
  annotations: *id001
  type: public final class
  extends: java.lang.Comparable<net.corda.v5.base.types.ByteSequence>
  implements: *id001
  interface: false
  methods:
    compareTo:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
      params:
        other:
          annotation: [NotNull]
          type: net.corda.v5.base.types.ByteSequence
    copy:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
    copyBytes:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: byte[]
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    getBytes:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: byte[]
    getOffset:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    getSize:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    of:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        bytes:
          annotation: [NotNull]
          type: byte[]
    open:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.io.ByteArrayInputStream
    putTo:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.nio.ByteBuffer
      params:
        buffer:
          annotation: [NotNull]
          type: java.nio.ByteBuffer
    slice:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.nio.ByteBuffer
    subSequence:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        offset:
          annotation: *id001
          type: int
        size:
          annotation: *id001
          type: int
    take:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.types.ByteSequence
      params:
        n:
          annotation: *id001
          type: int
    toString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: String
    writeTo:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: void
      params:
        output:
          annotation: [NotNull]
          type: java.io.OutputStream
  fields:
    bytes:
      annotation: [NotNull]
      type: private final byte[]
    _bytes:
      annotation: *id001
      type: private final byte[]
    offset:
      annotation: *id001
      type: private final int
    size:
      annotation: *id001
      type: private final int
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.types.ByteSequence.Companion
net.corda.v5.base.util.Base58:
  annotations: *id001
  type: public class
  extends: null
  implements: *id001
  interface: false
  methods:
    decode:
      annotations: *id001
      constructor: false
      default: false
      type: public static
      returnType: byte[]
      params:
        input:
          annotation: *id001
          type: String
    decodeToBigInteger:
      annotations: *id001
      constructor: false
      default: false
      type: public static
      returnType: java.math.BigInteger
      params:
        input:
          annotation: *id001
          type: String
    encode:
      annotations: *id001
      constructor: false
      default: false
      type: public static
      returnType: String
      params:
        input:
          annotation: *id001
          type: byte[]
  fields:
    ALPHABET:
      annotation: *id001
      type: private static final char[]
    ENCODED_ZERO:
      annotation: *id001
      type: private static final char
    INDEXES:
      annotation: *id001
      type: private static final int[]
net.corda.v5.base.util.EncodingUtils:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    base58ToByteArray:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: byte[]
      params: {}
    base58ToRealString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    base58toBase64:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    base58toHex:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    base64ToByteArray:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: byte[]
      params: {}
    base64ToRealString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    base64toBase58:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    base64toHex:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    hexToBase58:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    hexToBase64:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    hexToByteArray:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: byte[]
      params: {}
    hexToRealString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    toBase58:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    toBase64:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
    toHex:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: String
      params: {}
net.corda.v5.base.util.KotlinUtilsKt:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    contextLogger:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: org.slf4j.Logger
      params: {}
    debug:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: void
      params:
        msg:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function0<String>
    detailedLogger:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: org.slf4j.Logger
    exactAdd:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: long
      params:
        b:
          annotation: *id001
          type: long
    getDays:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: java.time.Duration
      params: {}
    getHours:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: java.time.Duration
      params: {}
    getMillis:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: java.time.Duration
      params: {}
    getMinutes:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: java.time.Duration
      params: {}
    getSeconds:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: java.time.Duration
      params: {}
    loggerFor:
      annotations: *id001
      constructor: false
      default: false
      type: public static final synthetic
      returnType: org.slf4j.Logger
    toNonEmptySet:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.types.NonEmptySet<T>
      params: {}
    trace:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: void
      params:
        msg:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function0<String>
    transient:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.util.PropertyDelegate<T>
      params:
        initializer:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function0<? extends T>
    uncheckedCast:
      annotations: *id001
      constructor: false
      default: false
      type: public static final
      returnType: U
      params:
        obj:
          annotation: *id001
          type: T
net.corda.v5.base.util.NetworkHostAndPort:
  annotations: [CordaSerializable]
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: String
    component2:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    copy:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.NetworkHostAndPort
      params:
        host:
          annotation: [NotNull]
          type: String
        port:
          annotation: *id001
          type: int
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getHost:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: String
    getPort:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: int
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    parse:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.util.NetworkHostAndPort
      params:
        str:
          annotation: [NotNull]
          type: String
    toString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: String
  fields:
    host:
      annotation: [NotNull]
      type: private final String
    port:
      annotation: *id001
      type: private final int
    INVALID_PORT_FORMAT:
      annotation: [NotNull]
      type: public static final String
      initialised value: 'Invalid port: %s'
    UNPARSEABLE_ADDRESS_FORMAT:
      annotation: [NotNull]
      type: public static final String
      initialised value: 'Unparseable address: %s'
    MISSING_PORT_FORMAT:
      annotation: [NotNull]
      type: public static final String
      initialised value: 'Missing port: %s'
    bracketedHost:
      annotation: *id001
      type: private static final kotlin.text.Regex
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.util.NetworkHostAndPort.Companion
net.corda.v5.base.util.NetworkHostAndPort$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    parse:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.NetworkHostAndPort
      params:
        str:
          annotation: [NotNull]
          type: String
net.corda.v5.base.util.PropertyDelegate:
  annotations: *id001
  type: public interface
  extends: *id001
  interface: true
  methods:
    getValue:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: T
      params:
        thisRef:
          annotation: [Nullable]
          type: Object
        property:
          annotation: [NotNull]
          type: kotlin.reflect.KProperty<?>
net.corda.v5.base.util.Try:
  annotations: [CordaSerializable]
  type: public abstract class
  extends: null
  implements: *id001
  interface: false
  methods:
    combine:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<C>
      params:
        other:
          annotation: [NotNull]
          type: net.corda.v5.base.util.Try<? extends B>
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function2<? super A, ? super B, ? extends C>
    doOnFailure:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
      params:
        action:
          annotation: [NotNull]
          type: java.util.function.Consumer<Throwable>
    doOnSuccess:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
      params:
        action:
          annotation: [NotNull]
          type: java.util.function.Consumer<? super A>
    flatMap:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<B>
      params:
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super A, ? extends net.corda.v5.base.util.Try<?
            extends B>>
    getOrThrow:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: A
    isFailure:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: boolean
    isSuccess:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: boolean
    map:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<B>
      params:
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super A, ? extends B>
    'on':
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.util.Try<T>
      params:
        body:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function0<? extends T>
    throwError:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
  fields:
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.util.Try.Companion
net.corda.v5.base.util.Try$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    'on':
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<T>
      params:
        body:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function0<? extends T>
net.corda.v5.base.util.Try$Failure:
  annotations: [CordaSerializable]
  type: public static final class
  extends: net.corda.v5.base.util.Try<A>
  implements: *id001
  interface: false
  methods:
    combine:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<C>
      params:
        other:
          annotation: [NotNull]
          type: net.corda.v5.base.util.Try<? extends B>
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function2<? super A, ? super B, ? extends C>
    component1:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: Throwable
    copy:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try.Failure<A>
      params:
        exception:
          annotation: [NotNull]
          type: Throwable
    doOnFailure:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
      params:
        action:
          annotation: [NotNull]
          type: java.util.function.Consumer<Throwable>
    doOnSuccess:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
      params:
        action:
          annotation: [NotNull]
          type: java.util.function.Consumer<? super A>
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    flatMap:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<B>
      params:
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super A, ? extends net.corda.v5.base.util.Try<?
            extends B>>
    getException:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: Throwable
    getOrThrow:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: A
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    isFailure:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
    isSuccess:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
    map:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<B>
      params:
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super A, ? extends B>
    'on':
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.util.Try<T>
      params:
        body:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function0<? extends T>
    throwError:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
    toString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: String
  fields:
    exception:
      annotation: [NotNull]
      type: private final Throwable
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.util.Try.Companion
net.corda.v5.base.util.Try$Success:
  annotations: [CordaSerializable]
  type: public static final class
  extends: net.corda.v5.base.util.Try<A>
  implements: *id001
  interface: false
  methods:
    combine:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<C>
      params:
        other:
          annotation: [NotNull]
          type: net.corda.v5.base.util.Try<? extends B>
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function2<? super A, ? super B, ? extends C>
    component1:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: A
    copy:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try.Success<A>
      params:
        value:
          annotation: *id001
          type: A
    doOnFailure:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
      params:
        action:
          annotation: [NotNull]
          type: java.util.function.Consumer<Throwable>
    doOnSuccess:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
      params:
        action:
          annotation: [NotNull]
          type: java.util.function.Consumer<? super A>
    equals:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    flatMap:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<B>
      params:
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super A, ? extends net.corda.v5.base.util.Try<?
            extends B>>
    getOrThrow:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: A
    getValue:
      annotations: *id001
      constructor: false
      default: false
      type: public final
      returnType: A
    hashCode:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: int
    isFailure:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
    isSuccess:
      annotations: *id001
      constructor: false
      default: false
      type: public
      returnType: boolean
    map:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<B>
      params:
        function:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super A, ? extends B>
    'on':
      annotations: [NotNull]
      constructor: false
      default: false
      type: public static final
      returnType: net.corda.v5.base.util.Try<T>
      params:
        body:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function0<? extends T>
    throwError:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: net.corda.v5.base.util.Try<A>
    toString:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public
      returnType: String
  fields:
    value:
      annotation: *id001
      type: private final A
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.util.Try.Companion
net.corda.v5.base.util.UuidGenerator:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods: {}
  fields:
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.base.util.UuidGenerator.Companion
net.corda.v5.base.util.UuidGenerator$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    next:
      annotations: [NotNull]
      constructor: false
      default: false
      type: public final
      returnType: java.util.UUID
net.corda.v5.base.util.VariablePropertyDelegate:
  annotations: *id001
  type: public interface
  extends: [net.corda.v5.base.util.PropertyDelegate]
  interface: true
  methods:
    getValue:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: T
      params:
        thisRef:
          annotation: [Nullable]
          type: Object
        property:
          annotation: [NotNull]
          type: kotlin.reflect.KProperty<?>
    setValue:
      annotations: *id001
      constructor: false
      default: false
      type: public abstract
      returnType: void
      params:
        thisRef:
          annotation: [Nullable]
          type: Object
        property:
          annotation: [NotNull]
          type: kotlin.reflect.KProperty<?>
        value:
          annotation: *id001
          type: T
