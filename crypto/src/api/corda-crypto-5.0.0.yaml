net.corda.v5.crypto.CompositeKey:
  annotations: &id001 []
  type: public final class
  extends: null
  implements: [java.security.PublicKey]
  interface: false
  methods:
    checkValidity:
      annotations: *id001
      default: false
      type: public final
      returnType: void
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    getAlgorithm:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
    getChildren:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.CompositeKey.NodeAndWeight>
    getEncoded:
      annotations: [NotNull]
      default: false
      type: public
      returnType: byte[]
    getFormat:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
    getInstance:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: java.security.PublicKey
      params:
        asn1:
          annotation: [NotNull]
          type: org.bouncycastle.asn1.ASN1Primitive
        decoder:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super byte[], ? extends java.security.PublicKey>
    getLeafKeys:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.util.Set<java.security.PublicKey>
    getThreshold:
      annotations: *id001
      default: false
      type: public final
      returnType: int
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    isFulfilledBy:
      annotations: *id001
      default: false
      type: public final
      returnType: boolean
      params:
        keysToCheck:
          annotation: [NotNull]
          type: Iterable<? extends java.security.PublicKey>
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
  fields:
    KEY_ALGORITHM:
      annotation: [NotNull]
      type: public static final String
      initialised value: COMPOSITE
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.CompositeKey.Companion
net.corda.v5.crypto.CompositeKey$Builder:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    addKey:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.CompositeKey.Builder
      params:
        key:
          annotation: [NotNull]
          type: java.security.PublicKey
        weight:
          annotation: *id001
          type: int
    addKeys:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.CompositeKey.Builder
      params:
        keys:
          annotation: [NotNull]
          type: java.util.List<? extends java.security.PublicKey>
    build:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.security.PublicKey
net.corda.v5.crypto.CompositeKey$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    getInstance:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.security.PublicKey
      params:
        asn1:
          annotation: [NotNull]
          type: org.bouncycastle.asn1.ASN1Primitive
        decoder:
          annotation: [NotNull]
          type: kotlin.jvm.functions.Function1<? super byte[], ? extends java.security.PublicKey>
net.corda.v5.crypto.CompositeKey$NodeAndWeight:
  annotations: [CordaSerializable]
  type: public static final class
  extends: org.bouncycastle.asn1.ASN1Object
  implements: [java.lang.Comparable]
  interface: false
  methods:
    compareTo:
      annotations: *id001
      default: false
      type: public
      returnType: int
      params:
        other:
          annotation: [NotNull]
          type: net.corda.v5.crypto.CompositeKey.NodeAndWeight
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.security.PublicKey
    component2:
      annotations: *id001
      default: false
      type: public final
      returnType: int
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.CompositeKey.NodeAndWeight
      params:
        node:
          annotation: [NotNull]
          type: java.security.PublicKey
        weight:
          annotation: *id001
          type: int
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getNode:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.security.PublicKey
    getWeight:
      annotations: *id001
      default: false
      type: public final
      returnType: int
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toASN1Primitive:
      annotations: [NotNull]
      default: false
      type: public
      returnType: org.bouncycastle.asn1.ASN1Primitive
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
net.corda.v5.crypto.CompositeSignaturesWithKeys:
  annotations: [CordaSerializable]
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.DigitalSignature.WithKey>
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.CompositeSignaturesWithKeys
      params:
        sigs:
          annotation: [NotNull]
          type: java.util.List<? extends net.corda.v5.crypto.DigitalSignature.WithKey>
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getSigs:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.DigitalSignature.WithKey>
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
  fields:
    EMPTY:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.CompositeSignaturesWithKeys
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.CompositeSignaturesWithKeys.Companion
net.corda.v5.crypto.CompositeSignaturesWithKeys$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods: {}
net.corda.v5.crypto.CordaOID:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods: {}
  fields:
    OID_R3_ROOT:
      annotation: [NotNull]
      type: public static final String
      initialised value: 1.3.6.1.4.1.50530
    OID_CORDA_PLATFORM:
      annotation: [NotNull]
      type: public static final String
      initialised value: 1.3.6.1.4.1.50530.1
    OID_X509_EXTENSION_CORDA_ROLE:
      annotation: [NotNull]
      type: public static final String
      initialised value: 1.3.6.1.4.1.50530.1.1
    OID_ALIAS_PRIVATE_KEY:
      annotation: [NotNull]
      type: public static final String
      initialised value: 1.3.6.1.4.1.50530.1.2
    OID_COMPOSITE_KEY:
      annotation: [NotNull]
      type: public static final String
      initialised value: 1.3.6.1.4.1.50530.1.3
    OID_COMPOSITE_SIGNATURE:
      annotation: [NotNull]
      type: public static final String
      initialised value: 1.3.6.1.4.1.50530.1.4
    OID_ALIAS_PRIVATE_KEY_IDENTIFIER:
      annotation: [NotNull]
      type: public static final org.bouncycastle.asn1.ASN1ObjectIdentifier
    OID_COMPOSITE_KEY_IDENTIFIER:
      annotation: [NotNull]
      type: public static final org.bouncycastle.asn1.ASN1ObjectIdentifier
    OID_COMPOSITE_SIGNATURE_IDENTIFIER:
      annotation: [NotNull]
      type: public static final org.bouncycastle.asn1.ASN1ObjectIdentifier
net.corda.v5.crypto.CryptoUtils:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    byKeys:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: java.util.Set<java.security.PublicKey>
      params: {}
    component1:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: java.security.PrivateKey
      params: {}
    component2:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: java.security.PublicKey
      params: {}
    containsAny:
      annotations: *id001
      default: false
      type: public static final
      returnType: boolean
      params:
        otherKeys:
          annotation: [NotNull]
          type: Iterable<? extends java.security.PublicKey>
    getKeys:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: java.util.Set<java.security.PublicKey>
      params: {}
    isFulfilledBy:
      annotations: *id001
      default: false
      type: public static final
      returnType: boolean
      params:
        otherKeys:
          annotation: [NotNull]
          type: Iterable<? extends java.security.PublicKey>
    sha256Bytes:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: byte[]
      params: {}
    toStringShort:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: String
      params: {}
net.corda.v5.crypto.DigestAlgorithmName:
  annotations: [CordaSerializable]
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: String
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.DigestAlgorithmName
      params:
        name:
          annotation: [NotNull]
          type: String
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getName:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: String
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
  fields:
    NONCE_SIZE:
      annotation: *id001
      type: public static final int
      initialised value: '8'
    SHA2_256:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.DigestAlgorithmName
    SHA2_384:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.DigestAlgorithmName
    SHA2_512:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.DigestAlgorithmName
    DEFAULT_ALGORITHM_NAME:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.DigestAlgorithmName
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.DigestAlgorithmName.Companion
net.corda.v5.crypto.DigestAlgorithmName$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods: {}
net.corda.v5.crypto.DigestService:
  annotations: *id001
  type: public interface
  extends: *id001
  interface: true
  methods:
    digestLength:
      annotations: *id001
      default: false
      type: public abstract
      returnType: int
      params:
        digestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
    hash:
      annotations: [NotNull]
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
      params:
        bytes:
          annotation: [NotNull]
          type: byte[]
        digestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
net.corda.v5.crypto.DigestServiceUtils:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    create:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        str:
          annotation: [NotNull]
          type: String
    getAllOnesHash:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        digestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
    getZeroHash:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        digestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
net.corda.v5.crypto.DigitalSignature:
  annotations: [CordaSerializable]
  type: public class
  extends: net.corda.v5.base.types.OpaqueBytes
  implements: *id001
  interface: false
  methods: {}
net.corda.v5.crypto.DigitalSignature$WithKey:
  annotations: [CordaSerializable]
  type: public static class
  extends: net.corda.v5.base.types.OpaqueBytes
  implements: *id001
  interface: false
  methods:
    getBy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: java.security.PublicKey
net.corda.v5.crypto.MerkleTree:
  annotations: *id001
  type: public abstract class
  extends: null
  implements: *id001
  interface: false
  methods:
    getHash:
      annotations: [NotNull]
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getMerkleTree:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.MerkleTree
      params:
        allLeavesHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestService
  fields:
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.MerkleTree.Companion
net.corda.v5.crypto.MerkleTree$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    getMerkleTree:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.MerkleTree
      params:
        allLeavesHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestService
net.corda.v5.crypto.MerkleTree$Leaf:
  annotations: *id001
  type: public static final class
  extends: net.corda.v5.crypto.MerkleTree
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.MerkleTree.Leaf
      params:
        hash:
          annotation: [NotNull]
          type: net.corda.v5.crypto.SecureHash
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getHash:
      annotations: [NotNull]
      default: false
      type: public
      returnType: net.corda.v5.crypto.SecureHash
    getMerkleTree:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.MerkleTree
      params:
        allLeavesHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestService
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.MerkleTree.Companion
net.corda.v5.crypto.MerkleTree$Node:
  annotations: *id001
  type: public static final class
  extends: net.corda.v5.crypto.MerkleTree
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    component2:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.MerkleTree
    component3:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.MerkleTree
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.MerkleTree.Node
      params:
        hash:
          annotation: [NotNull]
          type: net.corda.v5.crypto.SecureHash
        left:
          annotation: [NotNull]
          type: net.corda.v5.crypto.MerkleTree
        right:
          annotation: [NotNull]
          type: net.corda.v5.crypto.MerkleTree
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getHash:
      annotations: [NotNull]
      default: false
      type: public
      returnType: net.corda.v5.crypto.SecureHash
    getLeft:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.MerkleTree
    getMerkleTree:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.MerkleTree
      params:
        allLeavesHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestService
    getRight:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.MerkleTree
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.MerkleTree.Companion
net.corda.v5.crypto.PartialMerkleTree:
  annotations: [CordaSerializable]
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods:
    build:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.PartialMerkleTree
      params:
        merkleRoot:
          annotation: [NotNull]
          type: net.corda.v5.crypto.MerkleTree
        includeHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
    getRoot:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree
    rootAndUsedHashes:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        node:
          annotation: [NotNull]
          type: net.corda.v5.crypto.PartialMerkleTree.PartialTree
        usedHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        digestService:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestService
    verify:
      annotations: *id001
      default: false
      type: public final
      returnType: boolean
      params:
        merkleRootHash:
          annotation: [NotNull]
          type: net.corda.v5.crypto.SecureHash
        hashesToCheck:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        digestService:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestService
  fields:
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.PartialMerkleTree.Companion
net.corda.v5.crypto.PartialMerkleTree$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    build:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree
      params:
        merkleRoot:
          annotation: [NotNull]
          type: net.corda.v5.crypto.MerkleTree
        includeHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
    rootAndUsedHashes:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        node:
          annotation: [NotNull]
          type: net.corda.v5.crypto.PartialMerkleTree.PartialTree
        usedHashes:
          annotation: [NotNull]
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        digestService:
          annotation: [NotNull]
          type: net.corda.v5.crypto.DigestService
net.corda.v5.crypto.PartialMerkleTree$PartialTree:
  annotations: [CordaSerializable]
  type: public abstract static class
  extends: null
  implements: *id001
  interface: false
  methods: {}
net.corda.v5.crypto.PartialMerkleTree$PartialTree$IncludedLeaf:
  annotations: [CordaSerializable]
  type: public static final class
  extends: net.corda.v5.crypto.PartialMerkleTree$PartialTree
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree.IncludedLeaf
      params:
        hash:
          annotation: [NotNull]
          type: net.corda.v5.crypto.SecureHash
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getHash:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
net.corda.v5.crypto.PartialMerkleTree$PartialTree$Leaf:
  annotations: [CordaSerializable]
  type: public static final class
  extends: net.corda.v5.crypto.PartialMerkleTree$PartialTree
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree.Leaf
      params:
        hash:
          annotation: [NotNull]
          type: net.corda.v5.crypto.SecureHash
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getHash:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
net.corda.v5.crypto.PartialMerkleTree$PartialTree$Node:
  annotations: [CordaSerializable]
  type: public static final class
  extends: net.corda.v5.crypto.PartialMerkleTree$PartialTree
  implements: *id001
  interface: false
  methods:
    component1:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree
    component2:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree
    component3:
      annotations: [Nullable]
      default: false
      type: public final
      returnType: String
    copy:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree.Node
      params:
        left:
          annotation: [NotNull]
          type: net.corda.v5.crypto.PartialMerkleTree.PartialTree
        right:
          annotation: [NotNull]
          type: net.corda.v5.crypto.PartialMerkleTree.PartialTree
        hashAlgorithm:
          annotation: [Nullable]
          type: String
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        null:
          annotation: [Nullable]
          type: Object
    getHashAlgorithm:
      annotations: [Nullable]
      default: false
      type: public final
      returnType: String
    getLeft:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree
    getRight:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.PartialMerkleTree.PartialTree
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
net.corda.v5.crypto.PartialMerkleTreeKt:
  annotations: *id001
  type: public final class
  extends: null
  implements: *id001
  interface: false
  methods: {}
net.corda.v5.crypto.SecureHash:
  annotations: [CordaSerializable]
  type: public final class
  extends: net.corda.v5.base.types.OpaqueBytes
  implements: *id001
  interface: false
  methods:
    create:
      annotations: [NotNull]
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        str:
          annotation: [NotNull]
          type: String
    equals:
      annotations: *id001
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation: [Nullable]
          type: Object
    getAlgorithm:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: String
    hashCode:
      annotations: *id001
      default: false
      type: public
      returnType: int
    prefixChars:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: String
      params:
        prefixLen:
          annotation: *id001
          type: int
    toHexString:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: String
    toString:
      annotations: [NotNull]
      default: false
      type: public
      returnType: String
  fields:
    DELIMITER:
      annotation: *id001
      type: public static final char
      initialised value: ':'
    Companion:
      annotation: [NotNull]
      type: public static final net.corda.v5.crypto.SecureHash.Companion
net.corda.v5.crypto.SecureHash$Companion:
  annotations: *id001
  type: public static final class
  extends: null
  implements: *id001
  interface: false
  methods:
    create:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        str:
          annotation: [NotNull]
          type: String
net.corda.v5.crypto.SignatureVerificationService:
  annotations: *id001
  type: public interface
  extends: *id001
  interface: true
  methods:
    isValid:
      annotations: *id001
      default: false
      type: public abstract
      returnType: boolean
      params:
        publicKey:
          annotation: [NotNull]
          type: java.security.PublicKey
        signatureData:
          annotation: [NotNull]
          type: byte[]
        clearData:
          annotation: [NotNull]
          type: byte[]
    verify:
      annotations: *id001
      default: false
      type: public abstract
      returnType: void
      params:
        publicKey:
          annotation: [NotNull]
          type: java.security.PublicKey
        signatureData:
          annotation: [NotNull]
          type: byte[]
        clearData:
          annotation: [NotNull]
          type: byte[]
net.corda.v5.crypto.exceptions.CryptoServiceBadRequestException:
  annotations: [CordaSerializable]
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods:
    isRecoverable:
      annotations: *id001
      default: false
      type: public final
      returnType: boolean
net.corda.v5.crypto.exceptions.CryptoServiceException:
  annotations: [CordaSerializable]
  type: public class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods:
    isRecoverable:
      annotations: *id001
      default: false
      type: public final
      returnType: boolean
net.corda.v5.crypto.exceptions.CryptoServiceLibraryException:
  annotations: [CordaSerializable]
  type: public class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods: {}
net.corda.v5.crypto.exceptions.CryptoServiceProviderException:
  annotations: [CordaSerializable]
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods:
    isRecoverable:
      annotations: *id001
      default: false
      type: public final
      returnType: boolean
net.corda.v5.crypto.exceptions.CryptoServiceTimeoutException:
  annotations: [CordaSerializable]
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods:
    isRecoverable:
      annotations: *id001
      default: false
      type: public final
      returnType: boolean
net.corda.v5.crypto.exceptions.MerkleTreeException:
  annotations: [CordaSerializable]
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods:
    getReason:
      annotations: [NotNull]
      default: false
      type: public final
      returnType: String
net.corda.v5.crypto.exceptions.SignatureSchemeException:
  annotations: [CordaSerializable]
  type: public class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods: {}
net.corda.v5.crypto.exceptions.SignatureSchemeNotFoundException:
  annotations: [CordaSerializable]
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: *id001
  interface: false
  methods: {}
